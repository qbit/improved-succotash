Index: Source/cmake/WebKitCommon.cmake
--- Source/cmake/WebKitCommon.cmake.orig
+++ Source/cmake/WebKitCommon.cmake
@@ -106,7 +106,7 @@ if (NOT HAS_RUN_WEBKIT_COMMON)
         endif ()
     elseif (LOWERCASE_CMAKE_SYSTEM_PROCESSOR MATCHES "(i[3-6]86|x86)")
         set(WTF_CPU_X86 1)
-    elseif (LOWERCASE_CMAKE_SYSTEM_PROCESSOR MATCHES "ppc")
+    elseif (LOWERCASE_CMAKE_SYSTEM_PROCESSOR MATCHES "(ppc|powerpc)")
         set(WTF_CPU_PPC 1)
     elseif (LOWERCASE_CMAKE_SYSTEM_PROCESSOR MATCHES "ppc64")
         set(WTF_CPU_PPC64 1)
@@ -114,6 +114,8 @@ if (NOT HAS_RUN_WEBKIT_COMMON)
         set(WTF_CPU_PPC64LE 1)
     elseif (LOWERCASE_CMAKE_SYSTEM_PROCESSOR MATCHES "^riscv64")
         set(WTF_CPU_RISCV64 1)
+    elseif (LOWERCASE_CMAKE_SYSTEM_PROCESSOR MATCHES "sparc64")
+        set(WTF_CPU_SPARC64 1)
     else ()
         set(WTF_CPU_UNKNOWN 1)
     endif ()
@@ -185,9 +187,9 @@ if (NOT HAS_RUN_WEBKIT_COMMON)
     # We cannot check for RUBY_FOUND because it is set only when the full package is installed and
     # the only thing we need is the interpreter. Unlike Python, cmake does not provide a macro
     # for finding only the Ruby interpreter.
-    find_package(Ruby 1.9)
-    if (NOT RUBY_EXECUTABLE OR RUBY_VERSION VERSION_LESS 1.9)
-        message(FATAL_ERROR "Ruby 1.9 or higher is required.")
+    find_package(Ruby 3.0)
+    if (NOT RUBY_EXECUTABLE OR RUBY_VERSION VERSION_LESS 3.0)
+        message(FATAL_ERROR "Ruby 3.0 or higher is required.")
     endif ()
 
     # -----------------------------------------------------------------------------
@@ -199,7 +201,7 @@ if (NOT HAS_RUN_WEBKIT_COMMON)
     include(CheckCXXCompilerFlag)
     include(CheckCXXSourceCompiles)
     include(CheckFunctionExists)
-    include(CheckIncludeFile)
+    include(CheckIncludeFiles)
     include(CheckSymbolExists)
     include(CheckStructHasMember)
     include(CheckTypeSize)
