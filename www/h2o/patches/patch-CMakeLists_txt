wslay is picked up and used if present during configure, but isn't
registered as a dependency in the libraries. disable it for now.

Index: CMakeLists.txt
--- CMakeLists.txt.orig
+++ CMakeLists.txt
@@ -140,22 +140,22 @@ IF (DISABLE_LIBUV)
     SET(LIBUV_FOUND FALSE)
 ENDIF(DISABLE_LIBUV)
 
-IF (PKG_CONFIG_FOUND)
-    PKG_CHECK_MODULES(WSLAY libwslay)
-    IF (WSLAY_FOUND)
-        INCLUDE_DIRECTORIES(${WSLAY_INCLUDE_DIRS})
-        LINK_DIRECTORIES(${WSLAY_LIBRARY_DIRS})
-    ENDIF (WSLAY_FOUND)
-ENDIF (PKG_CONFIG_FOUND)
-IF (NOT WSLAY_FOUND)
-    FIND_PACKAGE(Wslay)
-    IF (WSLAY_FOUND)
-        INCLUDE_DIRECTORIES(${WSLAY_INCLUDE_DIR})
-    ENDIF (WSLAY_FOUND)
-ENDIF (NOT WSLAY_FOUND)
-IF (NOT WSLAY_FOUND)
-    SET(WSLAY_LIBRARIES -lwslay)
-ENDIF (NOT WSLAY_FOUND)
+#IF (PKG_CONFIG_FOUND)
+#    PKG_CHECK_MODULES(WSLAY libwslay)
+#    IF (WSLAY_FOUND)
+#        INCLUDE_DIRECTORIES(${WSLAY_INCLUDE_DIRS})
+#        LINK_DIRECTORIES(${WSLAY_LIBRARY_DIRS})
+#    ENDIF (WSLAY_FOUND)
+#ENDIF (PKG_CONFIG_FOUND)
+#IF (NOT WSLAY_FOUND)
+#    FIND_PACKAGE(Wslay)
+#    IF (WSLAY_FOUND)
+#        INCLUDE_DIRECTORIES(${WSLAY_INCLUDE_DIR})
+#    ENDIF (WSLAY_FOUND)
+#ENDIF (NOT WSLAY_FOUND)
+#IF (NOT WSLAY_FOUND)
+#    SET(WSLAY_LIBRARIES -lwslay)
+#ENDIF (NOT WSLAY_FOUND)
 
 IF (ZLIB_FOUND)
     INCLUDE_DIRECTORIES(${ZLIB_INCLUDE_DIRS})
