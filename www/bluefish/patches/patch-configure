Index: configure
--- configure.orig
+++ configure
@@ -16599,96 +16599,6 @@ gthread-2.0 \
 libxml-2.0"
 
 if test "x$enable_spell_check" != "xno"; then
-	{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for optional libenchant development files" >&5
-$as_echo_n "checking for optional libenchant development files... " >&6; }
-	if test -n "$PKG_CONFIG" && \
-    { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"enchant\""; } >&5
-  ($PKG_CONFIG --exists --print-errors "enchant") 2>&5
-  ac_status=$?
-  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
-  test $ac_status = 0; }; then
-
-		 BF_dependencies="$BF_dependencies enchant"
-
-$as_echo "#define HAVE_LIBENCHANT 1" >>confdefs.h
-
-                 if test -n "$PKG_CONFIG" && \
-    { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"enchant >= 1.4\""; } >&5
-  ($PKG_CONFIG --exists --print-errors "enchant >= 1.4") 2>&5
-  ac_status=$?
-  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
-  test $ac_status = 0; }; then
-
-$as_echo "#define HAVE_LIBENCHANT_1_4 1" >>confdefs.h
-
-
-fi
-		 { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
-$as_echo "yes" >&6; }
-
-else
-
-		 for ac_header in enchant.h enchant/enchant.h
-do :
-  as_ac_Header=`$as_echo "ac_cv_header_$ac_header" | $as_tr_sh`
-ac_fn_c_check_header_mongrel "$LINENO" "$ac_header" "$as_ac_Header" "$ac_includes_default"
-if eval test \"x\$"$as_ac_Header"\" = x"yes"; then :
-  cat >>confdefs.h <<_ACEOF
-#define `$as_echo "HAVE_$ac_header" | $as_tr_cpp` 1
-_ACEOF
- { $as_echo "$as_me:${as_lineno-$LINENO}: checking for enchant_dict_check in -lenchant" >&5
-$as_echo_n "checking for enchant_dict_check in -lenchant... " >&6; }
-if ${ac_cv_lib_enchant_enchant_dict_check+:} false; then :
-  $as_echo_n "(cached) " >&6
-else
-  ac_check_lib_save_LIBS=$LIBS
-LIBS="-lenchant  $LIBS"
-cat confdefs.h - <<_ACEOF >conftest.$ac_ext
-/* end confdefs.h.  */
-
-/* Override any GCC internal prototype to avoid an error.
-   Use char because int might match the return type of a GCC
-   builtin and then its argument prototype would still apply.  */
-#ifdef __cplusplus
-extern "C"
-#endif
-char enchant_dict_check ();
-int
-main ()
-{
-return enchant_dict_check ();
-  ;
-  return 0;
-}
-_ACEOF
-if ac_fn_c_try_link "$LINENO"; then :
-  ac_cv_lib_enchant_enchant_dict_check=yes
-else
-  ac_cv_lib_enchant_enchant_dict_check=no
-fi
-rm -f core conftest.err conftest.$ac_objext \
-    conftest$ac_exeext conftest.$ac_ext
-LIBS=$ac_check_lib_save_LIBS
-fi
-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_enchant_enchant_dict_check" >&5
-$as_echo "$ac_cv_lib_enchant_enchant_dict_check" >&6; }
-if test "x$ac_cv_lib_enchant_enchant_dict_check" = xyes; then :
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
-$as_echo "yes" >&6; }
-else
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
-
-fi
-
-
-fi
-
-done
-
-
-
-fi
 	{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for optional libenchant-2 development files" >&5
 $as_echo_n "checking for optional libenchant-2 development files... " >&6; }
 	if test -n "$PKG_CONFIG" && \
