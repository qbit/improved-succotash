Don't use bundled miniupnpc.

Index: libraries/CMakeLists.txt
--- libraries/CMakeLists.txt.orig
+++ libraries/CMakeLists.txt
@@ -225,51 +225,6 @@ if(BUILD_CLIENT)
   endif()
 endif()
 
-### MiniUPnPc ###
-
-if(BUILD_SERVER)
-  message(STATUS "Compiling MiniUPnPc...")
-
-  # Figure out the correct library path to attach to our imported target
-  set(MINIUPNPC_INCLUDE_DIR
-    "${CMAKE_CURRENT_BINARY_DIR}/local/include/miniupnpc")
-  set(MINIUPNPC_LIBRARY
-    "${CMAKE_CURRENT_BINARY_DIR}/local/lib/${libprefix}miniupnpc${libsuffix}")
-
-  # This must exist before the target is synthesized.
-  file(MAKE_DIRECTORY ${MINIUPNPC_INCLUDE_DIR})
-
-  # Generate the build.
-  execute_process(COMMAND "${CMAKE_COMMAND}"
-    -S "${CMAKE_CURRENT_SOURCE_DIR}/libminiupnpc"
-    -B "${CMAKE_CURRENT_BINARY_DIR}/libminiupnpc-build"
-    -G "${CMAKE_GENERATOR}"
-    -A "${CMAKE_GENERATOR_PLATFORM}"
-    -T "${CMAKE_GENERATOR_TOOLSET}"
-    "-DCMAKE_C_COMPILER=${CMAKE_C_COMPILER}"
-    "-DCMAKE_LINKER=${CMAKE_LINKER}"
-    "-DCMAKE_RC_COMPILER=${CMAKE_RC_COMPILER}"
-    "-DCMAKE_BUILD_TYPE=RelWithDebInfo"
-    "-DCMAKE_INSTALL_PREFIX=${CMAKE_CURRENT_BINARY_DIR}/local"
-    "-DCMAKE_INSTALL_LIBDIR=lib" # Without this, CentOS installs into lib64
-    "-DUPNPC_BUILD_SHARED=No"
-    "-DUPNPC_BUILD_TESTS=No")
-
-  # Compile the library.
-  execute_process(COMMAND "${CMAKE_COMMAND}"
-    --build "${CMAKE_CURRENT_BINARY_DIR}/libminiupnpc-build"
-    --config RelWithDebInfo --target install --parallel ${PARALLEL_PROC_COUNT})
-
-  # Synthesize an imported target that can be linked against.
-  add_library(upnpc-static STATIC IMPORTED GLOBAL)
-  set_target_properties(upnpc-static PROPERTIES
-    INTERFACE_INCLUDE_DIRECTORIES "${MINIUPNPC_INCLUDE_DIR}"
-    IMPORTED_LOCATION ${MINIUPNPC_LIBRARY})
-  if(WIN32)
-    set_target_properties(upnpc-static PROPERTIES INTERFACE_LINK_LIBRARIES "ws2_32;iphlpapi")
-  endif()
-endif()
-
 ### SDL libraries ###
 
 if(BUILD_CLIENT)
