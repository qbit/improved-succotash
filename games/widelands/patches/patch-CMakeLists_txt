- Don't set -O3.
- Don't install source docs.
- Unbreak build with cmake 3.15

Index: CMakeLists.txt
--- CMakeLists.txt.orig
+++ CMakeLists.txt
@@ -192,21 +192,9 @@ if(CMAKE_BUILD_TYPE STREQUAL "Debug")
   endif()
   option(OPTION_ASAN "Build with AddressSanitizer" ON)
 elseif(CMAKE_BUILD_TYPE STREQUAL "Release")
-  if(("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU") AND (CMAKE_CXX_COMPILER_VERSION VERSION_GREATER 6.2))
-    message(STATUS "GCC >6.2.0 breaks -03, setting -02")
-    set(WL_OPTIMIZE_FLAGS "-O2")
-  else()
-    set(WL_OPTIMIZE_FLAGS "-O3")
-  endif ()
   set(WL_DEBUG_FLAGS "-DNDEBUG -DNOPARACHUTE")
   option(OPTION_ASAN "Build with AddressSanitizer" OFF)
 elseif(CMAKE_BUILD_TYPE STREQUAL "RelWithDebInfo")
-  if(("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU") AND (CMAKE_CXX_COMPILER_VERSION VERSION_GREATER 6.2))
-    message(STATUS "GCC >6.2.0 breaks -03, setting -02")
-    set(WL_OPTIMIZE_FLAGS "-O2")
-  else()
-    set(WL_OPTIMIZE_FLAGS "-O3")
-  endif ()
   set(WL_DEBUG_FLAGS "-DNDEBUG -DNOPARACHUTE")
   option(OPTION_ASAN "Build with AddressSanitizer" ON)
 else()
@@ -255,7 +243,7 @@ if("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang")
   wl_add_flag(WL_COMPILE_DIAGNOSTICS "-Wno-unreachable-code")
   wl_add_flag(WL_COMPILE_DIAGNOSTICS "-Wno-documentation")
 
-  wl_add_flag(WL_COMPILE_DIAGNOSTICS "-Werror=deprecated")
+  #wl_add_flag(WL_COMPILE_DIAGNOSTICS "-Werror=deprecated")
   wl_add_flag(WL_COMPILE_DIAGNOSTICS "-Werror=non-pod-varargs")
 
   wl_add_flag(WL_COMPILE_DIAGNOSTICS "-Qunused-arguments")
@@ -313,7 +301,7 @@ if(NOT MSVC)
   # Turn some warnings into errors.
   wl_add_flag(WL_COMPILE_DIAGNOSTICS "-Werror=format-security")
   wl_add_flag(WL_COMPILE_DIAGNOSTICS "-Werror=return-type")
-  wl_add_flag(WL_COMPILE_DIAGNOSTICS "-Werror=shadow")
+#  wl_add_flag(WL_COMPILE_DIAGNOSTICS "-Werror=shadow")
   wl_add_flag(WL_COMPILE_DIAGNOSTICS "-Werror=uninitialized")
 
   wl_add_flag(WL_GENERIC_CXX_FLAGS "-std=c++11")
@@ -469,15 +457,6 @@ install(
   DESTINATION ${WL_INSTALL_BASEDIR}
   CONFIGURATIONS Debug;Release
   COMPONENT CoreLicenseFiles
-)
-
-install(
-  DIRECTORY
-    doc
-  DESTINATION ${WL_INSTALL_BASEDIR}
-  CONFIGURATIONS Debug
-  COMPONENT DocFiles
-  PATTERN "CMakeLists.txt" EXCLUDE
 )
 
 set_directory_properties(PROPERTIES ADDITIONAL_MAKE_CLEAN_FILES ${WL_INSTALL_DATADIR}/locale)
