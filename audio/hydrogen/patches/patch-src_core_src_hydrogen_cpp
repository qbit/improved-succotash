Add sndio support

Index: src/core/src/hydrogen.cpp
--- src/core/src/hydrogen.cpp.orig
+++ src/core/src/hydrogen.cpp
@@ -89,6 +89,8 @@
 #include <hydrogen/IO/PortMidiDriver.h>
 #include <hydrogen/IO/CoreAudioDriver.h>
 #include <hydrogen/IO/PulseAudioDriver.h>
+#include <hydrogen/IO/SndioAudioDriver.h>
+#include <hydrogen/IO/SndioMidiDriver.h>
 
 namespace H2Core
 {
@@ -2034,7 +2036,13 @@ AudioOutput* createDriver( const QString& sDriver )
 	Preferences *pPref = Preferences::get_instance();
 	AudioOutput *pDriver = nullptr;
 
-	if ( sDriver == "Oss" ) {
+	if ( sDriver == "SndioAudio" ) {
+		pDriver = new SndioAudioDriver( audioEngine_process );
+		if ( pDriver->class_name() == NullDriver::class_name() ) {
+			delete pDriver;
+			pDriver = NULL;
+		}
+	} else if ( sDriver == "Oss" ) {
 		pDriver = new OssDriver( audioEngine_process );
 		if ( pDriver->class_name() == NullDriver::class_name() ) {
 			delete pDriver;
@@ -2133,6 +2141,7 @@ void audioEngine_startAudioDrivers()
 	QString sAudioDriver = preferencesMng->m_sAudioDriver;
 	if ( sAudioDriver == "Auto" ) {
 	#ifndef WIN32
+		if ( ( m_pAudioDriver = createDriver( "SndioAudio" ) ) == nullptr ) {
 		if ( ( m_pAudioDriver = createDriver( "Jack" ) ) == nullptr ) {
 			if ( ( m_pAudioDriver = createDriver( "Alsa" ) ) == nullptr ) {
 				if ( ( m_pAudioDriver = createDriver( "CoreAudio" ) ) == nullptr ) {
@@ -2152,6 +2161,7 @@ void audioEngine_startAudioDrivers()
 				}
 			}
 		}
+		}
 	#else
 		//On Windows systems, use PortAudio is the prioritized backend
 		if ( ( m_pAudioDriver = createDriver( "PortAudio" ) ) == nullptr ) {
@@ -2187,7 +2197,15 @@ void audioEngine_startAudioDrivers()
 		}
 	}
 
-	if ( preferencesMng->m_sMidiDriver == "ALSA" ) {
+	if ( preferencesMng->m_sMidiDriver == "SndioMidi" ) {        
+#ifdef H2CORE_HAVE_SNDIO
+		SndioMidiDriver *sndioMidiDriver = new SndioMidiDriver();
+		m_pMidiDriver = sndioMidiDriver;
+		m_pMidiDriverOut = sndioMidiDriver;
+		m_pMidiDriver->open();
+		m_pMidiDriver->setActive( true );
+#endif
+	} else if ( preferencesMng->m_sMidiDriver == "ALSA" ) {
 #ifdef H2CORE_HAVE_ALSA
 		// Create MIDI driver
 		AlsaMidiDriver *alsaMidiDriver = new AlsaMidiDriver();
