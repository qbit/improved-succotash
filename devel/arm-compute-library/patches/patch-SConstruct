Index: SConstruct
--- SConstruct.orig
+++ SConstruct
@@ -215,17 +215,8 @@ c_compiler = os.environ.get('CC', default_c_compiler)
 if env['os'] == 'android' and ( 'clang++' not in cpp_compiler or 'clang' not in c_compiler ):
     print( "WARNING: Only clang is officially supported to build the Compute Library for Android")
 
-if 'clang++' in cpp_compiler:
-    env.Append(CXXFLAGS = ['-Wno-vla-extension'])
-elif 'armclang' in cpp_compiler:
-    pass
-else:
-    env.Append(CXXFLAGS = ['-Wlogical-op','-Wnoexcept','-Wstrict-null-sentinel', '-Wno-misleading-indentation'])
+env.Append(CXXFLAGS = ['-Wno-vla-extension'])
 
-if cpp_compiler == 'g++':
-    # Don't strip comments that could include markers
-    env.Append(CXXFLAGS = ['-C'])
-
 if env['cppthreads']:
     env.Append(CPPDEFINES = [('ARM_COMPUTE_CPP_SCHEDULER', 1)])
 
@@ -352,25 +343,6 @@ if not GetOption("help"):
     except OSError:
         print("ERROR: Compiler '%s' not found" % env['CXX'])
         Exit(1)
-
-    if 'armclang' in cpp_compiler:
-        pass
-    elif 'clang++' not in cpp_compiler:
-        if env['arch'] == 'arm64-v8.2-a' and not version_at_least(compiler_ver, '6.2.1'):
-            print("GCC 6.2.1 or newer is required to compile armv8.2-a code")
-            Exit(1)
-        elif env['arch'] == 'arm64-v8a' and not version_at_least(compiler_ver, '4.9'):
-            print("GCC 4.9 or newer is required to compile Arm® Neon™ code for AArch64")
-            Exit(1)
-
-        if version_at_least(compiler_ver, '6.1'):
-            env.Append(CXXFLAGS = ['-Wno-ignored-attributes'])
-
-        if compiler_ver == '4.8.3':
-            env.Append(CXXFLAGS = ['-Wno-array-bounds'])
-
-        if not version_at_least(compiler_ver, '7.0.0') and env['os'] == 'bare_metal':
-            env.Append(LINKFLAGS = ['-fstack-protector-strong'])
 
 if env['high_priority'] and env['build_config']:
     print("The high priority library cannot be built in conjunction with a user-specified build configuration")
