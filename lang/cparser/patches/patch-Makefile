Index: Makefile
--- Makefile.orig
+++ Makefile
@@ -34,7 +34,7 @@ endif
 
 CPPFLAGS := $(CPPFLAGS) $(FIRM_CPPFLAGS)
 
-CFLAGS += -Wall -W -Wstrict-prototypes -Wmissing-prototypes
+CFLAGS += -Wall -W -Wstrict-prototypes -Wmissing-prototypes -I${LOCALBASE}/include
 # With -std=c99 we get __STRICT_ANSI__ which disables all posix declarations
 # in cygwin, regardless of a set POSIX_C_SOURCE feature test macro.
 ifneq ($(filter %cygwin %mingw32, $(shell $(CC) $(CFLAGS) -dumpmachine)),)
@@ -43,7 +43,7 @@ else
 CFLAGS += -std=c99 -pedantic
 endif
 CFLAGS_debug    = -O0 -g
-CFLAGS_optimize = -O3 -fomit-frame-pointer -DNDEBUG -DNO_DEFAULT_VERIFY
+CFLAGS_optimize = -fomit-frame-pointer -DNDEBUG -DNO_DEFAULT_VERIFY
 CFLAGS_profile  = -pg -O3 -fno-inline
 CFLAGS_coverage = --coverage -O0
 CFLAGS += $(CFLAGS_$(variant))
@@ -91,8 +91,10 @@ REVISION ?= $(shell git --git-dir $(top_srcdir)/.git d
 SELFCHECK_FLAGS ?= -Wall -Wno-shadow -Werror
 
 # Update revision.h if necessary
+# gmake 4.2.1 > 4.3 backward-incompatibility
+H = \#
 UNUSED := $(shell \
-	REV="\#define cparser_REVISION \"$(REVISION)\""; \
+	REV="$(H)define cparser_REVISION \"$(REVISION)\""; \
 	echo "$$REV" | cmp -s - $(REVISIONH) 2> /dev/null || echo "$$REV" > $(REVISIONH) \
 )
 # determine if we can use "cparser-beta" as quickcheck
