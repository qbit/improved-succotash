add OpenBSD to ifdef

Index: src/std/socket.c
--- src/std/socket.c.orig
+++ src/std/socket.c
@@ -192,7 +192,7 @@ HL_PRIM int hl_host_resolve( vbyte *host ) {
 	ip = inet_addr((char*)host);
 	if( ip == INADDR_NONE ) {
 		struct hostent *h;
-#	if defined(HL_WIN) || defined(HL_MAC) || defined(HL_IOS) || defined(HL_TVOS) || defined (HL_CYGWIN) || defined(HL_CONSOLE)
+#	if defined(HL_WIN) || defined(HL_MAC) || defined(HL_IOS) || defined(HL_TVOS) || defined (HL_CYGWIN) || defined(HL_CONSOLE) || defined(__OpenBSD__)
 		h = gethostbyname((char*)host);
 #	else
 		struct hostent hbase;
@@ -219,7 +219,7 @@ HL_PRIM vbyte *hl_host_to_string( int ip ) {
 HL_PRIM vbyte *hl_host_reverse( int ip ) {
 	struct hostent *h;
 	hl_blocking(true);
-#	if defined(HL_WIN) || defined(HL_MAC) || defined(HL_IOS) || defined(HL_TVOS) || defined(HL_CYGWIN) || defined(HL_CONSOLE)
+#	if defined(HL_WIN) || defined(HL_MAC) || defined(HL_IOS) || defined(HL_TVOS) || defined(HL_CYGWIN) || defined(HL_CONSOLE) || defined(__OpenBSD__)
 	h = gethostbyaddr((char *)&ip,4,AF_INET);
 #	elif defined(__ANDROID__)
 	hl_error("hl_host_reverse() not available for this platform");
