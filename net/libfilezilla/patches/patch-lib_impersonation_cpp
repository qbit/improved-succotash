Index: lib/impersonation.cpp
--- lib/impersonation.cpp.orig
+++ lib/impersonation.cpp
@@ -7,7 +7,7 @@
 #include <optional>
 #include <tuple>
 
-#if FZ_UNIX
+#if FZ_UNIX && !__OpenBSD__
 #include <crypt.h>
 #include <shadow.h>
 #endif
@@ -79,7 +79,7 @@ std::optional<gid_t> get_group(fz::native_string const
 	return {};
 }
 
-#if FZ_UNIX
+#if FZ_UNIX && !__OpenBSD__
 struct shadow_holder {
 	shadow_holder() = default;
 	shadow_holder(shadow_holder const&) = delete;
@@ -171,7 +171,7 @@ std::vector<gid_t> get_supplementary(std::string const
 
 bool check_auth(fz::native_string const& username, fz::native_string const& password)
 {
-#if FZ_UNIX
+#if FZ_UNIX && !__OpenBSD__
 	auto shadow = get_shadow(username);
 	if (shadow.shadow_) {
 		struct crypt_data data{};
