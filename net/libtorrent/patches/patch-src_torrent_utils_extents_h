assign/fill difference, see header

Index: src/torrent/utils/extents.h
--- src/torrent/utils/extents.h.orig
+++ src/torrent/utils/extents.h
@@ -51,9 +51,9 @@ struct extents_base {
   typedef std::array<mapped_type, TableSize> table_type;
   
   extents_base(key_type pos, unsigned int mb, mapped_value_type val) :
-    mask_bits(mb), position(pos) { table.assign(mapped_type(NULL, mapped_value_type())); }
+    mask_bits(mb), position(pos) { fill_with_value(table, mapped_type(NULL, mapped_value_type())); }
   extents_base(extents_base* parent, typename table_type::const_iterator itr) :
-    mask_bits(parent->mask_bits - TableBits), position(parent->partition_pos(itr)) { table.assign(mapped_type(NULL, itr->second)); }
+    mask_bits(parent->mask_bits - TableBits), position(parent->partition_pos(itr)) { fill_with_value(table, mapped_type(NULL, itr->second)); }
   ~extents_base();
 
   bool         is_divisible(key_type key) const { return key % mask_bits == 0; }
