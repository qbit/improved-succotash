No need to regen the manpage

Index: CMakeLists.txt
--- CMakeLists.txt.orig
+++ CMakeLists.txt
@@ -6,7 +6,7 @@ set( CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_S
 
 
 # finding Lua
-find_package( Lua REQUIRED )
+find_package( Lua ${MODLUA_VERSION} )
 include_directories ( ${LUA_INCLUDE_DIR} )
 
 
@@ -47,7 +47,7 @@ include_directories("${PROJECT_BINARY_DIR}")
 # also called "runner"
 add_custom_command( OUTPUT runner.c
 	COMMAND ${CMAKE_COMMAND} -E echo "Generating built-in runner linkable"
-	COMMAND ${LUA_EXECUTABLE} ${PROJECT_SOURCE_DIR}/bin2carray.lua runner.out runner runner.c
+        COMMAND ${LUA_EXECUTABLE} ${PROJECT_SOURCE_DIR}/bin2carray.lua runner.out runner runner.c
 	DEPENDS runner.out
 )
 
@@ -62,7 +62,7 @@ add_custom_command( OUTPUT runner.out
 #   rsync rysnc-ssh and direct
 add_custom_command( OUTPUT defaults.c
 	COMMAND ${CMAKE_COMMAND} -E echo "Generating built-in default configs"
-	COMMAND ${LUA_EXECUTABLE} ${PROJECT_SOURCE_DIR}/bin2carray.lua defaults.out defaults defaults.c
+        COMMAND ${LUA_EXECUTABLE} ${PROJECT_SOURCE_DIR}/bin2carray.lua defaults.out defaults defaults.c
 	DEPENDS defaults.out
 )
 
@@ -79,13 +79,6 @@ add_custom_command( OUTPUT defaults.out
 	DEPENDS ${DEFAULT_CONFIGS}
 )
 
-# the manpage
-add_custom_target( manpage
-	COMMAND ${CMAKE_COMMAND} -E echo "Updating the manpage"
-	COMMAND a2x --format=manpage doc/manpage/lsyncd.1.txt
-	DEPENDS doc/manpage/lsyncd.1.txt
-)
-
 add_custom_target( tests
 	COMMAND echo "Running the tests"
 	COMMAND echo "Note you are expected to:"
@@ -106,4 +99,4 @@ add_executable( lsyncd ${LSYNCD_SRC} )
 target_link_libraries( lsyncd ${LUA_LIBRARIES} )
 
 install( TARGETS lsyncd RUNTIME DESTINATION bin )
-install( FILES doc/manpage/lsyncd.1 DESTINATION man )
+install( FILES doc/manpage/lsyncd.1 DESTINATION man/man1 )
