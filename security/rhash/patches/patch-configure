Fix clang detection. Taken from
https://github.com/rhash/RHash/commit/4dc506066cf1727b021e6352535a8bb315c3f8dc

Index: configure
--- configure.orig
+++ configure
@@ -519,38 +519,36 @@ else
     elif run_cmd "$CC --version"; then
       cc_name_tmp=$($CC --version 2>&1 | head -n 1 | cut -d ' ' -f 1)
     fi
-    if test -n "${cc_name_tmp}"; then
-      if echo "$cc_name_tmp" | grep -q "gcc"; then
-        cc_name=$cc_name_tmp
-        start_check "$CC version"
-        cc_vendor=gnu
-        cc_version=$($CC -dumpversion 2>&1)
-        if ! echo $cc_version | grep -q '^[0-9][0-9]*\.[0-9]'; then
-          cc_v2=$($CC -dumpfullversion -dumpversion 2>/dev/null)
-          if echo $cc_v2 | grep -q '^[0-9][0-9]*\.[0-9]'; then
-            cc_version=$cc_v2
-          fi
+    if echo "$cc_name_tmp" | grep -q "gcc"; then
+      cc_name=$cc_name_tmp
+      start_check "$CC version"
+      cc_vendor=gnu
+      cc_version=$($CC -dumpversion 2>&1)
+      if ! echo $cc_version | grep -q '^[0-9][0-9]*\.[0-9]'; then
+        cc_v2=$($CC -dumpfullversion -dumpversion 2>/dev/null)
+        if echo $cc_v2 | grep -q '^[0-9][0-9]*\.[0-9]'; then
+          cc_version=$cc_v2
         fi
-        case $cc_version in
-          2.96*)
-            cc_fail=yes
-            ;;
-          *)
-            _cc_major=$(echo $cc_version | cut -d '.' -f 1)
-            _cc_minor=$(echo $cc_version | cut -d '.' -f 2)
-            _cc_mini=$(echo $cc_version | cut -d '.' -f 3)
-            ;;
-        esac
-        finish_check "$cc_name $cc_version"
-        break
       fi
-      if echo "$cc_name_tmp" | grep -q "clang"; then
-        start_check "$CC version"
-        cc_vendor=clang
-        cc_version=$($CC -dumpversion 2>&1)
-        finish_check "clang $cc_version"
-        break
-      fi
+      case $cc_version in
+        2.96*)
+          cc_fail=yes
+          ;;
+        *)
+          _cc_major=$(echo $cc_version | cut -d '.' -f 1)
+          _cc_minor=$(echo $cc_version | cut -d '.' -f 2)
+          _cc_mini=$(echo $cc_version | cut -d '.' -f 3)
+          ;;
+      esac
+      finish_check "$cc_name $cc_version"
+      break
+    elif $CC --version 2>&1 | grep -q "clang"; then
+      start_check "$CC version"
+      cc_vendor=clang
+      cc_version=$($CC -dumpversion 2>&1)
+      finish_check "clang $cc_version"
+      break
+    else
       cc_name_tmp=$($CC -V 2>&1 | head -n 1 | cut -d ' ' -f 2,3)
       if test "$cc_name_tmp" = "Sun C"; then
         start_check "$CC version"
@@ -604,7 +602,7 @@ log_finish
 # detect proper shared library name
 SHARED_PREFIX="lib"
 STATIC_PREFIX="lib"
-SHARED_EXT=".so.0"
+SHARED_EXT=".so.${LIBrhash_VERSION}"
 STATIC_EXT=".a"
 SOLINK_EXT=".so"
 EXEC_EXT=
