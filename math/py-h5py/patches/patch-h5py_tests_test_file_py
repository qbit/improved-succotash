Index: h5py/tests/test_file.py
--- h5py/tests/test_file.py.orig
+++ h5py/tests/test_file.py
@@ -825,6 +825,7 @@ class TestPickle(TestCase):
 # hence no subclassing TestCase
 @pytest.mark.mpi
 class TestMPI(object):
+    @pytest.mark.skip(reason="fixture 'mpi_file_name' not present")
     def test_mpio(self, mpi_file_name):
         """ MPIO driver and options """
         from mpi4py import MPI
@@ -833,6 +834,7 @@ class TestMPI(object):
             assert f
             assert f.driver == 'mpio'
 
+    @pytest.mark.skip(reason="fixture 'mpi_file_name' not present")
     def test_mpio_append(self, mpi_file_name):
         """ Testing creation of file with append """
         from mpi4py import MPI
@@ -841,6 +843,7 @@ class TestMPI(object):
             assert f
             assert f.driver == 'mpio'
 
+    @pytest.mark.skip(reason="fixture 'mpi_file_name' not present")
     @pytest.mark.skipif(h5py.version.hdf5_version_tuple < (1, 8, 9),
                         reason="mpio atomic file operations were added in HDF5 1.8.9+")
     def test_mpi_atomic(self, mpi_file_name):
@@ -852,6 +855,7 @@ class TestMPI(object):
             f.atomic = True
             assert f.atomic
 
+    @pytest.mark.skip(reason="fixture 'mpi_file_name' not present")
     def test_close_multiple_mpio_driver(self, mpi_file_name):
         """ MPIO driver and options """
         from mpi4py import MPI
