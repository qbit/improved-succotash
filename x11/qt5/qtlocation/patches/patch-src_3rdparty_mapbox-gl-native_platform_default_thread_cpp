Index: src/3rdparty/mapbox-gl-native/platform/default/thread.cpp
--- src/3rdparty/mapbox-gl-native/platform/default/thread.cpp.orig
+++ src/3rdparty/mapbox-gl-native/platform/default/thread.cpp
@@ -4,6 +4,7 @@
 #include <string>
 
 #include <pthread.h>
+#include <pthread_np.h>
 #include <sched.h>
 
 namespace mbgl {
@@ -11,16 +12,16 @@ namespace platform {
 
 std::string getCurrentThreadName() {
     char name[32] = "unknown";
-    pthread_getname_np(pthread_self(), name, sizeof(name));
+    pthread_get_name_np(pthread_self(), name, sizeof(name));
 
     return name;
 }
 
 void setCurrentThreadName(const std::string& name) {
     if (name.size() > 15) { // Linux hard limit (see manpages).
-        pthread_setname_np(pthread_self(), name.substr(0, 15).c_str());
+        pthread_set_name_np(pthread_self(), name.substr(0, 15).c_str());
     } else {
-        pthread_setname_np(pthread_self(), name.c_str());
+        pthread_set_name_np(pthread_self(), name.c_str());
     }
 }
 
@@ -28,9 +29,11 @@ void makeThreadLowPriority() {
     struct sched_param param;
     param.sched_priority = 0;
 
+    /*
     if (sched_setscheduler(0, SCHED_IDLE, &param) != 0) {
         Log::Warning(Event::General, "Couldn't set thread scheduling policy");
     }
+    */
 }
 
 } // namespace platform
