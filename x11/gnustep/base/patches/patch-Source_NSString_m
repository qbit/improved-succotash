revert https://github.com/gnustep/libs-base/commit/bd5f2909e6edc8012a0a6e44ea1402dfbe1353a4
see: https://github.com/gnustep/libs-base/issues/212
and: https://www.sogo.nu/bugs/view.php?id=5416

Index: Source/NSString.m
--- Source/NSString.m.orig
+++ Source/NSString.m
@@ -4126,22 +4126,30 @@ GSICUCollatorOpen(NSStringCompareOptions mask, NSLocal
   unsigned	len = [self length];
   NSData	*d;
 
-  if (NSUnicodeStringEncoding == encoding)
+  if (len == 0)
     {
+      d = [NSDataClass data];
+    }
+  else if (encoding == NSUnicodeStringEncoding)
+    {
       unichar	*u;
       unsigned	l;
 
-      /* Fast path for Unicode (UTF16) without a specific byte order,
-       * where we must prepend a byte order mark.
-       * The case for UTF32 is handled in the slower branch.
-       */
       u = (unichar*)NSZoneMalloc(NSDefaultMallocZone(),
 	(len + 1) * sizeof(unichar));
       *u = byteOrderMark;
       [self getCharacters: u + 1];
       l = GSUnicode(u, len, 0, 0);
-      d = [NSDataClass dataWithBytesNoCopy: u
-				    length: (l + 1) * sizeof(unichar)];
+      if (l == len || flag == YES)
+	{
+	  d = [NSDataClass dataWithBytesNoCopy: u
+					length: (l + 1) * sizeof(unichar)];
+	}
+      else
+	{
+	  d = nil;
+	  NSZoneFree(NSDefaultMallocZone(), u);
+	}
     }
   else
     {
@@ -4156,28 +4164,11 @@ GSICUCollatorOpen(NSStringCompareOptions mask, NSLocal
        * We can then use our concrete subclass implementation to do the
        * work of converting to the desired encoding.
        */
-      if (NSUTF32StringEncoding == encoding)
+      if (len >= 4096)
 	{
-	  /* For UTF32 without byte order specified, we must include a
-	   * BOM at the start of the data.
-	   */
-	  len++;
-	  if (len >= 4096)
-	    {
-	      u = NSZoneMalloc(NSDefaultMallocZone(), len * sizeof(unichar));
-	    }
-	  *u = byteOrderMark;
-	  [self getCharacters: u+1];
+	  u = NSZoneMalloc(NSDefaultMallocZone(), len * sizeof(unichar));
 	}
-      else
-	{
-	  if (len >= 4096)
-	    {
-	      u = NSZoneMalloc(NSDefaultMallocZone(), len * sizeof(unichar));
-	    }
-	  [self getCharacters: u];
-	}
-
+      [self getCharacters: u];
       if (flag == NO)
         {
 	  options = GSUniStrict;
