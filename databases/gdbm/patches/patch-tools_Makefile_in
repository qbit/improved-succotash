Fix parallel build.  gmake recognizes libfoo.a and ./libfoo.a as
equivalent, ours does not.

Index: tools/Makefile.in
--- tools/Makefile.in.orig
+++ tools/Makefile.in
@@ -152,17 +152,17 @@ am__installdirs = "$(DESTDIR)$(bindir)"
 PROGRAMS = $(bin_PROGRAMS)
 gdbm_dump_SOURCES = gdbm_dump.c
 gdbm_dump_OBJECTS = gdbm_dump.$(OBJEXT)
-gdbm_dump_DEPENDENCIES = ./libgdbmapp.a ../src/libgdbm.la
+gdbm_dump_DEPENDENCIES = libgdbmapp.a ../src/libgdbm.la
 AM_V_lt = $(am__v_lt_@AM_V@)
 am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
 am__v_lt_0 = --silent
 am__v_lt_1 = 
 gdbm_load_SOURCES = gdbm_load.c
 gdbm_load_OBJECTS = gdbm_load.$(OBJEXT)
-gdbm_load_DEPENDENCIES = ./libgdbmapp.a ../src/libgdbm.la
+gdbm_load_DEPENDENCIES = libgdbmapp.a ../src/libgdbm.la
 am_gdbmtool_OBJECTS = gdbmtool.$(OBJEXT)
 gdbmtool_OBJECTS = $(am_gdbmtool_OBJECTS)
-gdbmtool_DEPENDENCIES = ./libgdbmapp.a ../src/libgdbm.la
+gdbmtool_DEPENDENCIES = libgdbmapp.a ../src/libgdbm.la
 AM_V_P = $(am__v_P_@AM_V@)
 am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
 am__v_P_0 = false
